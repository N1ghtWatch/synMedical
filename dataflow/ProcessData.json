{
	"name": "ProcessData",
	"properties": {
		"folder": {
			"name": "Process Option 1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsDatasetA",
						"type": "DatasetReference"
					},
					"name": "DatasetA"
				},
				{
					"dataset": {
						"referenceName": "dsDatasetB",
						"type": "DatasetReference"
					},
					"name": "DatasetB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlDestination",
						"type": "DatasetReference"
					},
					"name": "SinktoAzureSQL"
				}
			],
			"transformations": [
				{
					"name": "JoinbyPatientID"
				},
				{
					"name": "DerivedColumn"
				},
				{
					"name": "SelectFinalData"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\t{Employee Name} as string,\n\t\tgender as string,\n\t\tdob as string,\n\t\tzipcode as string,\n\t\temployment_status as string,\n\t\teducation as string,\n\t\t{Patient id} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DatasetA\nsource(output(\n\t\tmarital_status as string,\n\t\tchildren as string,\n\t\tancestry as string,\n\t\tavg_commute as string,\n\t\tdaily_internet_use as string,\n\t\tavailable_vehicles as string,\n\t\tmilitary_service as string,\n\t\tdisease as string,\n\t\t{P. id} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DatasetB\nDatasetA, DatasetB join({Patient id} == {P. id},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinbyPatientID\nJoinbyPatientID derive(dob = toDate(dob,\"dd-MM-yyyy\"),\n\t\t{In Military} = iif(military_service==\"yes\", \"In Military\",\"Non Military\"),\n\t\t{Birth Month} = month(toDate(dob,\"dd-MM-yyyy\")),\n\t\tAge = floor(toInteger( (currentTimestamp() - toTimestamp(dob, 'dd-MM-yyyy')) / 86400000 )/365.25)) ~> DerivedColumn\nDerivedColumn1 select(mapColumn(\n\t\t{Employee Name},\n\t\tgender,\n\t\tdob,\n\t\tzipcode,\n\t\temployment_status,\n\t\teducation,\n\t\t{Patient id},\n\t\tmarital_status,\n\t\tchildren,\n\t\tancestry,\n\t\tavg_commute,\n\t\tdaily_internet_use,\n\t\tavailable_vehicles,\n\t\tmilitary_service,\n\t\tdisease,\n\t\t{In Military},\n\t\t{Birth Month}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFinalData\nDerivedColumn derive({Age Bracket} = iif( Age < 18 , \"0-18\"  ,\r\niif( Age < 25 , \"18-24\" ,\r\niif( Age < 35 , \"25-34\" ,\r\niif( Age < 45 , \"35-44\" ,\r\niif( Age < 55 , \"45-54\" ,\r\niif( Age < 65 , \"55-64\" , \"65 and older\" ))))))) ~> DerivedColumn1\nSelectFinalData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Patient id} as long,\n\t\t{Employee Name} as string,\n\t\tgender as string,\n\t\t{In Military} as string,\n\t\tmilitary_service as boolean,\n\t\tdob as date,\n\t\t{Birth Month} as integer,\n\t\tzipcode as long,\n\t\temployment_status as string,\n\t\teducation as string,\n\t\tmarital_status as string,\n\t\tchildren as integer,\n\t\tancestry as string,\n\t\tavg_commute as decimal(8,2),\n\t\tdaily_internet_use as decimal(8,2),\n\t\tavailable_vehicles as integer,\n\t\tdisease as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinktoAzureSQL"
		}
	}
}